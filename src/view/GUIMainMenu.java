package view;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.DateFormat;
import java.util.Date;
import java.util.TimerTask;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;


/**
 *   @ Νικήτογλου Ελευθέριος - std100152@ac.eap.gr
 *   @ Ρούσσου Άννα - std114276@ac.eap.gr   
 *   @ Σιδηρόπουλος Κωνσταντίνος - std114284@ac.eap.gr
 *   @ Τμήμα ΘΕΣ-2 2017-18
 */



public class GUIMainMenu extends JFrame 
{
    // Δημιουργία παραθυρων
    private final  GUIWeatherNow weathernow = new GUIWeatherNow();
    private final GUIForecastWeather forecastweather = new GUIForecastWeather() ;
    private final GUIStatistics statistics = new GUIStatistics();
    private final GUIAbout about = new GUIAbout();
    
    public GUIMainMenu() 
    {
            
        initComponents();

        //Εμφάνιση εικονιδίου
        Image image = new ImageIcon(this.getClass().getResource("/img/gui/logo.png")).getImage();
        this.setIconImage(image);

        //Προσθηκη πάνελς στο Κεντρικό Παράθυρο
        desktop.add(weathernow);
        desktop.add(forecastweather);
        desktop.add(statistics);
        desktop.add(about); 

        // Το ρολόι θα ανανεώνεται κάθε δευτερόλεπτο
        java.util.Timer t = new java.util.Timer();
        TimerTask tt = new TimerTask() {
            @Override
            public void run() {
                updateClock();
            }
        };
         t.schedule(tt, 0, 1000);

        //Επιβεβαίωση τερματισμού της εφαρμογής
        addWindowListener(new WindowAdapter() 
        {
            public void windowClosing(WindowEvent we) 
            {
                closeWindowPrompt();
            }
        });
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        toolbar = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        WeatherNowButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        ForecastButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        StatisticsButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        exitButton = new javax.swing.JButton();
        clockLabel = new javax.swing.JLabel();
        statusbar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Menubar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuExit = new javax.swing.JMenuItem();
        mnuWeather = new javax.swing.JMenu();
        mnuWeathernow = new javax.swing.JMenuItem();
        mnuForecast = new javax.swing.JMenuItem();
        mnuStatistics = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("eWeather");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        WeatherNowButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WeatherNowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/weathernow.png"))); // NOI18N
        WeatherNowButton.setText("<html><center>Ο Καιρός<br/>Τώρα</center></html>");
        WeatherNowButton.setToolTipText("Ο ");
        WeatherNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeatherNowButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(WeatherNowButton);
        jToolBar1.add(jSeparator1);

        ForecastButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ForecastButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/calendar.png"))); // NOI18N
        ForecastButton.setText("<html><center>Πρόβλεψη<br/>Καιρού</center></html>");
        ForecastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForecastButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(ForecastButton);
        jToolBar1.add(jSeparator2);

        StatisticsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StatisticsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/statistics.png"))); // NOI18N
        StatisticsButton.setText("<html><center>Στατιστικά<br/></center></html>");
        StatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatisticsButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(StatisticsButton);
        jToolBar1.add(jSeparator3);

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/exit.png"))); // NOI18N
        exitButton.setText("<html><center>Έξοδος<br/></center></html>");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(exitButton);

        clockLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clockLabel.setText("Clock");

        javax.swing.GroupLayout toolbarLayout = new javax.swing.GroupLayout(toolbar);
        toolbar.setLayout(toolbarLayout);
        toolbarLayout.setHorizontalGroup(
            toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolbarLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        toolbarLayout.setVerticalGroup(
            toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolbarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(clockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jToolBar1.getAccessibleContext().setAccessibleParent(this);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Powered by OpenWeatherMap");

        javax.swing.GroupLayout statusbarLayout = new javax.swing.GroupLayout(statusbar);
        statusbar.setLayout(statusbarLayout);
        statusbarLayout.setHorizontalGroup(
            statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        statusbarLayout.setVerticalGroup(
            statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        desktop.setLayer(toolbar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(statusbar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(statusbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopLayout.createSequentialGroup()
                .addComponent(toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 588, Short.MAX_VALUE)
                .addComponent(statusbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mnuFile.setText("Αρχείο");

        mnuExit.setText("Έξοδος");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExit);

        Menubar.add(mnuFile);

        mnuWeather.setText("Καιρός");

        mnuWeathernow.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK));
        mnuWeathernow.setText("Ο Καιρός Τώρα");
        mnuWeathernow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuWeathernowActionPerformed(evt);
            }
        });
        mnuWeather.add(mnuWeathernow);

        mnuForecast.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        mnuForecast.setText("Πρόβλεψη Καιρού");
        mnuForecast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuForecastActionPerformed(evt);
            }
        });
        mnuWeather.add(mnuForecast);

        mnuStatistics.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        mnuStatistics.setText("Στατιστικά");
        mnuStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStatisticsActionPerformed(evt);
            }
        });
        mnuWeather.add(mnuStatistics);

        Menubar.add(mnuWeather);

        mnuHelp.setText("Βοήθεια");

        mnuAbout.setText("Σχετικά με το eWeather");
        mnuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAboutActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuAbout);

        Menubar.add(mnuHelp);

        setJMenuBar(Menubar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        closeWindowPrompt();     
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mnuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAboutActionPerformed
       
        about.setVisible(true);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuAboutActionPerformed

    private void WeatherNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeatherNowButtonActionPerformed
       if (weathernow.isVisible())  // αποτροπή εμφάνισης του ίδιου jframe 2η φορά.
              return;
    
       weathernow.setVisible(true); 
          
    }//GEN-LAST:event_WeatherNowButtonActionPerformed

    private void ForecastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForecastButtonActionPerformed
       if  (forecastweather.isVisible())  // αποτροπή εμφάνισης του ίδιου jframe 2η φορά.
              return;
       
       forecastweather.setVisible(true); 
    }//GEN-LAST:event_ForecastButtonActionPerformed

    private void StatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatisticsButtonActionPerformed
        // TODO add your handling code here:
        
       if  (statistics.isVisible())  // αποτροπή εμφάνισης του ίδιου jframe 2η φορά.
              return;
       
       statistics.setVisible(true); 
    }//GEN-LAST:event_StatisticsButtonActionPerformed

    //έξοδος εφαρμογής σε περίπτωση που πατηθεί η έξοδος
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        closeWindowPrompt();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void mnuWeathernowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuWeathernowActionPerformed
        weathernow.setVisible(true);      
    }//GEN-LAST:event_mnuWeathernowActionPerformed

    private void mnuForecastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuForecastActionPerformed
        forecastweather.setVisible(true);
    }//GEN-LAST:event_mnuForecastActionPerformed

    private void mnuStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStatisticsActionPerformed
        statistics.setVisible(true);
    }//GEN-LAST:event_mnuStatisticsActionPerformed

    
// Ενημερώνει το ρολόι
    private void updateClock() {
        Date now = new Date();
        clockLabel.setText(DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.SHORT).format(now));
    }
    
    //επιβεβαίωση τερματισμού της εφαρμογής
    private void closeWindowPrompt()
    {
        Object[] options = {"OK","Άκυρο"};
        int result = JOptionPane.showOptionDialog( new JFrame(),
                "Να γίνει τερματισμός της εφαρμογής;", "Έξοδος ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,options,options[0]
                );
        
        if (result == JOptionPane.YES_OPTION)
            System.exit(0);
    }

    
     
    //Επανορισμός του default renderer που χρησιμοποιεί ο πίνακας, για να αλλαξουμε την μοροφοποίηση  
    static public class  NewRender extends DefaultTableCellRenderer{
               
        public NewRender(){
           setOpaque(true);
                
        }
        @Override 
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) { 
        super.getTableCellRendererComponent(table, value, selected, focused, row, column); 
        setBackground(Color.white); 
        setForeground(Color.black);
        JTableHeader header = table.getTableHeader();
        header.setPreferredSize(new Dimension(100, 27));
        setBorder(BorderFactory.createLineBorder(Color.white));
        setHorizontalAlignment(JLabel.CENTER);
        Font f = new Font("Arial", Font.BOLD, 15);
        setFont(f);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER);          
        table.setDefaultRenderer(String.class, centerRenderer); 

          return this; 
          
          }
               
     }  
    
     //Επανορισμός του default renderer για μια στήλη ώστε να εμφανιστεί το εικονίδιο
    static public class ImageRenderer extends DefaultTableCellRenderer {
        
        @Override
         public Component getTableCellRendererComponent(JTable tableWeatherNow, Object value, boolean isSelected,
          boolean hasFocus, int row, int column) {
        return (Component)value;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ForecastButton;
    private javax.swing.JMenuBar Menubar;
    private javax.swing.JButton StatisticsButton;
    private javax.swing.JButton WeatherNowButton;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem mnuAbout;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuForecast;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuStatistics;
    private javax.swing.JMenu mnuWeather;
    private javax.swing.JMenuItem mnuWeathernow;
    private javax.swing.JPanel statusbar;
    private javax.swing.JPanel toolbar;
    // End of variables declaration//GEN-END:variables

 }
        
        
    



