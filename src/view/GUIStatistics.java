package view;
import controller.ControllerForecast;
import view.GUIMainMenu.NewRender;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Forecast;
import remote.DbConnector;

/**
 *   @ Νικήτογλου Ελευθέριος - std100152@ac.eap.gr
 *   @ Ρούσσου Άννα - std114276@ac.eap.gr   
 *   @ Σιδηρόπουλος Κωνσταντίνος - std114284@ac.eap.gr
 *   @ Τμήμα ΘΕΣ-2 2017-18
 */


public class GUIStatistics extends javax.swing.JInternalFrame {

        private final ControllerForecast ctrl;

   
    public GUIStatistics() {
      ctrl = new ControllerForecast();
      initComponents();
      getContentPane().setBackground( new Color(173,195,221)); // αλλαγη χρωματος background του frame
       cityCombobox.setSelectedIndex(-1);
       layer.setVisible(false);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        eWeatherPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("eWeatherPU").createEntityManager();
        cityQuery = java.beans.Beans.isDesignTime() ? null : eWeatherPUEntityManager.createQuery("SELECT c.cityName FROM City c");
        cityList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : cityQuery.getResultList();
        townlabel = new javax.swing.JLabel();
        cityCombobox = new javax.swing.JComboBox<>();
        minmaxbutton = new javax.swing.JButton();
        townbutton = new javax.swing.JButton();
        backbutton = new javax.swing.JButton();
        layer = new javax.swing.JLayeredPane();
        panel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        thermom1 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        thermom2 = new javax.swing.JLabel();

        setMaximizable(true);
        setResizable(true);
        setTitle("Στατιστικά");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/statistics.png"))); // NOI18N

        townlabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        townlabel.setText("Επιλογή πόλης:");

        cityCombobox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${resultList}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cityQuery, eLProperty, cityCombobox);
        bindingGroup.addBinding(jComboBoxBinding);

        cityCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboboxActionPerformed(evt);
            }
        });

        minmaxbutton.setBackground(new java.awt.Color(173, 195, 221));
        minmaxbutton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        minmaxbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/statisticsbutton1.png"))); // NOI18N
        minmaxbutton.setText("Θερμοκρασία Min/Max");
        minmaxbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minmaxbuttonActionPerformed(evt);
            }
        });

        townbutton.setBackground(new java.awt.Color(173, 195, 221));
        townbutton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        townbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/statisticsbutton1.png"))); // NOI18N
        townbutton.setText("Θερμοκρασία ανά Πόλη");
        townbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                townbuttonActionPerformed(evt);
            }
        });

        backbutton.setBackground(new java.awt.Color(173, 195, 221));
        backbutton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/backbutton.png"))); // NOI18N
        backbutton.setText("Επιστροφή");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(173, 195, 221));

        jScrollPane1.setBackground(new java.awt.Color(173, 195, 221));

        text.setEditable(false);
        text.setBackground(new java.awt.Color(173, 195, 221));
        text.setColumns(20);
        text.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        text.setRows(5);
        jScrollPane1.setViewportView(text);

        thermom1.setBackground(new java.awt.Color(173, 195, 221));
        thermom1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        thermom1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/thermometer.png"))); // NOI18N

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addComponent(thermom1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(thermom1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panel2.setBackground(new java.awt.Color(173, 195, 221));

        jScrollPane2.setBackground(new java.awt.Color(173, 195, 221));

        table.setAutoCreateRowSorter(true);
        table.setBackground(new java.awt.Color(173, 195, 221));
        table.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Πόλη", "Ελάχιστη", "Μέγιστη", "Μέση"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(55);
        table.setRowMargin(10);
        table.setShowVerticalLines(false);
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
        }

        thermom2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        thermom2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/thermometer.png"))); // NOI18N

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addComponent(thermom2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(thermom2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layer.setLayer(panel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(panel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layerLayout = new javax.swing.GroupLayout(layer);
        layer.setLayout(layerLayout);
        layerLayout.setHorizontalGroup(
            layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layerLayout.setVerticalGroup(
            layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
            .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layerLayout.createSequentialGroup()
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layerLayout.createSequentialGroup()
                    .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cityCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(townlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(townbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(312, 312, 312))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(minmaxbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(layer)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(townlabel)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minmaxbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(townbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(layer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cityComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityComboboxActionPerformed

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        cityCombobox.setSelectedIndex(-1);
        setVisible(false);
        layer.setVisible(false);
    }//GEN-LAST:event_backbuttonActionPerformed

    private void minmaxbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minmaxbuttonActionPerformed
        /*Αν δεν έχει επιλεγεί πόλη εμφάνιση αντίστοιχου μηνύματος*/

        if (!isCitiesListItemSelected())
            return; 
        
        layer.setVisible(true);
        panel1.setVisible(true);
        panel2.setVisible(false);
        showMessage();
           
    }//GEN-LAST:event_minmaxbuttonActionPerformed

    private void townbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_townbuttonActionPerformed
        layer.setVisible(true);
        panel1.setVisible(false);
        panel2.setVisible(true);
        showTable();

    }//GEN-LAST:event_townbuttonActionPerformed

    /* μέθοδος εμφάνισης μηνύματος text */
    private void showMessage(){
        
        SimpleDateFormat df = new SimpleDateFormat("d-MM-yyyy kk:mm");

        Forecast maxForecast = ctrl.selectForecastMaxTempByCityName((String)cityCombobox.getSelectedItem());
        Forecast minForecast = ctrl.selectForecastMinTempByCityName((String)cityCombobox.getSelectedItem());
                       
        String message = "\nΠόλη: " + maxForecast.getCity().getCityName() +"\n\nΗ μέγιστη θερμοκρασία θα είναι στις " 
            + df.format(maxForecast.getForecastPK().getDt())
            + ".\nTο θερμόμετρο θα φτάσει στους " 
            + Math.round(maxForecast.getMaintemp()) + " °C\n\n"
            + "Η ελάχιστη θερμοκρασία θα είναι στις "
            + df.format(minForecast.getForecastPK().getDt())
            +".\nΤο θερμόμετρο θα πέσει στους "
            + Math.round(minForecast.getMaintemp())+" °C\n";
            text.setText(message);
        
    }
    /* μεθοδος εμφάνισης των στοιχείων στον πίνακα */
    private void showTable()
    {           
       table.getTableHeader().setDefaultRenderer(new NewRender());
       int colCount = table.getColumnCount();
       DefaultTableModel tModel = (DefaultTableModel) table.getModel();
       tModel.setRowCount(0);

        Object[] ob = new Object[colCount];
        /*αλλαγή πλάτους στηλών*/
       table.getColumnModel().getColumn(0).setMinWidth(100);  
       table.getColumnModel().getColumn(1).setMinWidth(160);
       table.getColumnModel().getColumn(2).setMinWidth(160);
        
        Query q = DbConnector.getEm().createNamedQuery("City.findAll");
        
        List<Double> maxTempsForecasts = ctrl.selectForecastsMaxTempAllCities();
        List<Double> minTempsForecasts = ctrl.selectForecastsMinTempAllCities();
        List<Double> avgTemps = ctrl.selectForecastsAvgTempAllCities();
        List<Forecast> cityNames= ctrl.selectForecastsByCityName();
        
        
        for (int i = 0; i < q.getResultList().size(); i++)
        {
            ob[0] = cityNames.get(i);
            ob[1] = Math.round(minTempsForecasts.get(i)) + " °C" ;
            ob[2] = Math.round(maxTempsForecasts.get(i)) + " °C" ;
            ob[3] = Math.round(avgTemps.get(i)) + " °C" ;
            tModel.addRow(ob);
        }
    }
    /*Έλεγχος αν έχει επιλεγεί στοιχείο απ τη λίστα και εμφάνιση αντίστοιχου μυνήματος*/
       private boolean isCitiesListItemSelected()
    {
        if (cityCombobox.getSelectedItem()== null )
        {
            JOptionPane.showMessageDialog(new JFrame(),
            "Δεν έχετε επιλέξει καμία πόλη.",
            "Μήνυμα σφάλματος",
            JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JComboBox<String> cityCombobox;
    private java.util.List<model.City> cityList;
    private javax.persistence.Query cityQuery;
    private javax.persistence.EntityManager eWeatherPUEntityManager;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLayeredPane layer;
    private javax.swing.JButton minmaxbutton;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JTable table;
    private javax.swing.JTextArea text;
    private javax.swing.JLabel thermom1;
    private javax.swing.JLabel thermom2;
    private javax.swing.JButton townbutton;
    private javax.swing.JLabel townlabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
  

    
}
